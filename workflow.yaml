kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: nas-pvc
---
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: builder-trainer-
spec:
  entrypoint: builder-trainer
  # onExit: onExit
  arguments:
    parameters:
    - name: repo
      value: https://github.com/TaylorHere/chinese_bilstm_cnn_crf.git
    - name: local
      value: bilstm_crf_keras
    - name: registry
      value: registry.cn-hangzhou.aliyuncs.com
    - name: project
      value: taylor
    - name: image
      value: bilstm_crf_keras
    - name: tag
      value: latest
    - name: dockerfile
      value: Dockerfile
    - name: train-data-mount-path
      value: /home/jovyan/shared/
    - name: gpu-type
      value: T4
    - name: gpu-limits
      value: 1
  volumes:
    - name: workdir
      persistentVolumeClaim:
        claimName: nas-pvc
    - name: docker-config
      configMap:
        name: docker-config

  templates:
    - name: builder-trainer
      steps:
          - - name: puller
              template: puller
          - - name: builder
              template: builder
              arguments:
                parameters:
                - name: image
                  value: "{{workflow.parameters.image}}"
                - name: tag
                  value: "{{workflow.name}}"
          - - name: submiter
              template: submiter
              arguments:
                parameters:
                - name: image
                  value: "{{workflow.parameters.image}}"
                - name: tag
                  value: "{{workflow.name}}"

    - name: puller
      retryStrategy: {}
      container:
        image: registry.cn-hangzhou.aliyuncs.com/taylor/git:latest
        command: ['sh', '-c']
        args:
            - >-
                if cd /tmp/git/{{workflow.parameters.local}};
                then git pull;
                else git clone {{workflow.parameters.repo}} /tmp/git/{{workflow.parameters.local}};
                fi && 
                tar  -C /tmp/git/{{workflow.parameters.local}} -zcvf /tmp/git/{{workflow.parameters.local}}/context.tar.gz .
        volumeMounts:
          - name: workdir
            mountPath: /tmp/


    - name: builder
      inputs:
        parameters:
        - name: image
        - name: tag
      retryStrategy: {}
      container:
        image: registry.cn-hangzhou.aliyuncs.com/taylor/kaniko:latest
        args: [
          "--dockerfile={{workflow.parameters.dockerfile}}",
          "--context=dir:///tmp/git/{{workflow.parameters.local}}",
          "--destination={{workflow.parameters.registry}}/{{workflow.parameters.project}}/{{inputs.parameters.image}}:{{inputs.parameters.tag}}",
          "--cache=true",
          "--cache-dir=/tmp/builder/cache",
        ]
        volumeMounts:
          - name: docker-config
            mountPath: /kaniko/.docker/
          - name: workdir
            mountPath: /tmp/

    - name: submiter
      inputs:
        parameters:
        - name: image
          value: "{{workflow.parameters.image}}"
        - name: tag
          value: latest
      resource:
        action: create
        successCondition: status.succeeded > 0
        failureCondition: status.failed > 0
        manifest: |
            apiVersion: batch/v1
            kind: Job
            metadata:
                name: job-on-eci-of-{{workflow.name}}
                ownerReferences:
                - apiVersion: argoproj.io/v1alpha1
                  blockOwnerDeletion: true
                  kind: Workflow
                  name: "{{workflow.name}}"
                  uid: "{{workflow.uid}}"
            spec:
              template:
                metadata:
                  annotations:
                    k8s.aliyun.com/eci-gpu-type: "{{workflow.parameters.gpu-type}}"
                    k8s.aliyun.com/eci-image-cache: "true"
                  name: trainer-job
                spec:
                  restartPolicy: Never
                  volumes:
                    - name: workdir
                      persistentVolumeClaim:
                        claimName: nas-pvc
                  containers:
                  - name: trainer-job
                    imagePullPolicy: IfNotPresent
                    resources:
                      limits:
                          nvidia.com/gpu: "{{workflow.parameters.gpu-limits}}"
                    image: "{{workflow.parameters.registry}}/{{workflow.parameters.project}}/{{inputs.parameters.image}}:{{inputs.parameters.tag}}"
                    command:
                      - python
                      - train.py
                      - --train_dir=/home/jovyan/shared/
                      - --max_len=306
                      - --documents_length=2531574
                      - --label_2_index_length=6
                      - --batch_size=256
                      - --epochs=3
                    volumeMounts:
                      - name: workdir
                        mountPath: "{{workflow.parameters.train-data-mount-path}}"

    - name: onExit
      resource:
        action: delete
        manifest: |
            apiVersion: batch/v1
            kind: Job
            metadata:
                name: trainer-job-{{workflow.name}}
